@page "/"
@using ADOApi.UI.Services
@inject SemanticKernelService SemanticKernelService

<PageTitle>Azure DevOps AI Assistant</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h3>Azure DevOps AI Assistant</h3>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="question" class="form-label">Ask a question about your work items:</label>
                        <textarea class="form-control" id="question" rows="3" @bind="Question" @bind:event="oninput"></textarea>
                    </div>
                    <button class="btn btn-primary" @onclick="GetAnswer" disabled="@IsLoading">
                        @if (IsLoading)
                        {
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                            <span>Loading...</span>
                        }
                        else
                        {
                            <span>Get Answer</span>
                        }
                    </button>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Answer))
            {
                <div class="card mt-4">
                    <div class="card-header">
                        <h4>Answer</h4>
                    </div>
                    <div class="card-body">
                        <p class="card-text">@Answer</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private string Question { get; set; } = string.Empty;
    private string Answer { get; set; } = string.Empty;
    private bool IsLoading { get; set; }

    private async Task GetAnswer()
    {
        if (string.IsNullOrWhiteSpace(Question))
            return;

        IsLoading = true;
        try
        {
            Answer = await SemanticKernelService.GetAnswerAsync(Question);
        }
        catch (Exception ex)
        {
            Answer = $"Error: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
        }
    }
} 